"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,k=c["".concat(d,".").concat(u)]||c[u]||s[u]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2176:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o="Devices",l={unversionedId:"config/devices",id:"config/devices",title:"Devices",description:"The format of Detox config allows you to define inside it multiple device configs in a key-value manner, i.e.:",source:"@site/../docs/config/devices.md",sourceDirName:"config",slug:"/config/devices",permalink:"/Detox/docs/next/config/devices",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/devices.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Overview",permalink:"/Detox/docs/next/config/overview"},next:{title:"Apps",permalink:"/Detox/docs/next/config/apps"}},d={},p=[],m={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"devices"},"Devices"),(0,r.kt)("p",null,"The format of Detox config allows you to define inside it multiple device configs in a key-value manner, i.e.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  "devices": {\n    "simulator": {\n      "type": "ios.simulator",\n      "device": {\n        // one of these or a combination of them\n        "id": "D53474CF-7DD1-4673-8517-E75DAD6C34D6",\n        "type": "iPhone 11 Pro",\n        "name": "MySim",\n        "os": "iOS 13.0"\n      }\n    },\n    "emulator": {\n      "type": "android.emulator",\n      "device": {\n        "avdName": "Pixel_2_API_29"\n      },\n      "utilBinaryPaths": [\n        "optional-property-with/path/to/test-butler-or-anything-else.apk"\n      ]\n    },\n    "android.attached": {\n      "type": "android.attached",\n      "device": {\n        "adbName": "YOGAA1BBB412"\n      }\n    },\n    "android.genycloud": {\n      "type": "android.genycloud",\n      "device": {\n        "recipeUUID": "11111111-2222-3333-4444-555555555555"\n        // or recipeName: "MyRecipeName",\n      }\n    }\n  },\n  "apps": {\n    // ... see next API page ...\n  },\n  "configurations": {\n    // ... see previous API page ...\n  }\n};\n')),(0,r.kt)("p",null,"A device config can have the following params:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Configuration Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Details"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("strong",{parentName:"em"},"Required.")," String Literal"),". Mandatory property to discern device types: ",(0,r.kt)("inlineCode",{parentName:"td"},"ios.simulator"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.emulator"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.attached"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.genycloud")," etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"device")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("strong",{parentName:"em"},"Required.")," Object.")," Device query, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},'{ "byType": "iPhone 11 Pro" }')," for iOS simulator, ",(0,r.kt)("inlineCode",{parentName:"td"},'{ "avdName": "Pixel_2_API_29" }')," for Android emulator or ",(0,r.kt)("inlineCode",{parentName:"td"},'{ "adbName": "<pattern>" }')," for attached Android device with name matching the regex.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bootArgs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. String. Supported by ",(0,r.kt)("inlineCode",{parentName:"em"},"ios.simulator")," and ",(0,r.kt)("inlineCode",{parentName:"em"},"android.emulator")," only.")," ",(0,r.kt)("br",null)," Supply an extra ",(0,r.kt)("em",{parentName:"td"},"String")," of arguments to ",(0,r.kt)("inlineCode",{parentName:"td"},"xcrun simctl boot ...")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"emulator -verbose ... @AVD_Name"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"forceAdbInstall")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. Boolean. Supported for Android devices only.")," ",(0,r.kt)("br",null)," A ",(0,r.kt)("em",{parentName:"td"},"Boolean")," value, ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," by default. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", it tells ",(0,r.kt)("inlineCode",{parentName:"td"},"device.installApp()")," to use ",(0,r.kt)("inlineCode",{parentName:"td"},"adb install"),". Otherwise, it would use the combination of ",(0,r.kt)("inlineCode",{parentName:"td"},"adb push <app.apk>")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"adb shell pm install"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"utilBinaryPaths")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. Array of strings. Supported for Android devices only.")," ",(0,r.kt)("br",null)," An array of relative paths of ",(0,r.kt)("em",{parentName:"td"},"utility")," app (APK) binary-files to preinstall on the tested devices - once before the test execution begins.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Note"),": these are not affected by various install-lifecycle events, such as launching an app with ",(0,r.kt)("inlineCode",{parentName:"td"},"device.launchApp({delete: true})"),", which reinstalls the app. A good example of why this might come in handy is ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/linkedin/test-butler"},"Test Butler"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"gpuMode")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. String Literal (",(0,r.kt)("code",null,"auto ","|"," host ","|"," swiftshader","_","indirect ","|"," angle","_","indirect ","|"," guest"),"). Supported by ",(0,r.kt)("inlineCode",{parentName:"em"},"android.emulator")," only.")," ",(0,r.kt)("br",null)," A fixed ",(0,r.kt)("strong",{parentName:"td"},"string")," , which tells ",(0,r.kt)("a",{parentName:"td",href:"https://developer.android.com/studio/run/emulator-acceleration#command-gpu"},"in which GPU mode")," the emulator should be booted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"headless")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. Boolean.")," ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," by default. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", it tells Detox to boot an Android emulator with ",(0,r.kt)("inlineCode",{parentName:"td"},"-no-window")," option, or to not open the iOS Simulator app when running with Android or iOS respectively.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"readonly")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"Optional. Boolean. Supported by ",(0,r.kt)("inlineCode",{parentName:"em"},"android.emulator")," only.")," ",(0,r.kt)("br",null),"  ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," by default. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", it forces Detox to boot even a single emulator with ",(0,r.kt)("inlineCode",{parentName:"td"},"-read-only")," option.",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Note"),": when used with multiple workers, this setting has no effect \u2014 emulators will be booted always with ",(0,r.kt)("inlineCode",{parentName:"td"},"-read-only"),".")))),(0,r.kt)("p",null,"Also, in the Detox ",(0,r.kt)("inlineCode",{parentName:"p"},"configurations")," you can use the device configs as-is, without aliasing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "configurations": {\n    "ios.sim.debug": {\n      "device": {\n        "type": "ios.simulator",\n        "device": {\n          "type": "iPhone 12 Pro"\n        }\n      },\n      "app": "alias-to-app"\n      // ...\n    }\n  }\n}\n')))}s.isMDXComponent=!0}}]);