"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6182],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={},o="Apps",p={unversionedId:"config/apps",id:"config/apps",title:"Apps",description:"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:",source:"@site/../docs/config/apps.md",sourceDirName:"config",slug:"/config/apps",permalink:"/Detox/docs/next/config/apps",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/apps.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Devices",permalink:"/Detox/docs/next/config/devices"},next:{title:"Artifacts",permalink:"/Detox/docs/next/config/artifacts"}},l={},s=[],c={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"apps"},"Apps"),(0,r.kt)("p",null,"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "devices": {\n    // ... see above ...\n  },\n  "apps": {\n    "ios.debug": {\n      "type": "ios.app",\n      "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/example.app",\n      "build": "xcodebuild -project ios/example.xcodeproj -scheme example -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build"\n    },\n    "android.release": {\n      "type": "android.apk",\n      "binaryPath": "path/to/myApp.apk",\n      "build": "..."\n    }\n  },\n  "configurations": {\n    // ... see above ...\n  }\n}\n')),(0,r.kt)("p",null,"An app config can have the following params:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Configuration Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Details"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory property to discern app types: ",(0,r.kt)("inlineCode",{parentName:"td"},"ios.app"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.apk"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Use only when working with multiple apps within the same configuration. See an example below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"binaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"Relative path to the ipa/app/apk due to be tested (make sure you build the app in a project relative path)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"build")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," Build command (normally an ",(0,r.kt)("inlineCode",{parentName:"td"},"xcodebuild")," command you use to build your app), which can be called later using Detox CLI tool as a convenience.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"testBinaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"(optional, Android only): relative path to the test app (apk)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"launchArgs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," An object specifying arguments (key-values pairs) to pass through into the app, upon launching on the device. For more info, refer to the dedicated ",(0,r.kt)("a",{parentName:"td",href:"/Detox/docs/next/guide/launch-args"},"launch-arguments guide"),".")))),(0,r.kt)("p",null,"To work with multiple apps within the same configuration you should be giving each app its name, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "apps": {\n    "driver.ios.release": {\n      "type": "ios.app",\n      "name": "driver",\n      "binaryPath": "path/to/driver.app"\n    },\n    "passenger.ios.release": {\n      "type": "ios.app",\n      "name": "passenger",\n      "binaryPath": "path/to/passenger.app"\n    }\n  },\n  "configurations": {\n    "ios.release": {\n      "device": "simulator",\n      "apps": ["driver", "passenger"]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"After that, you can change the current app in your tests via ",(0,r.kt)("a",{parentName:"p",href:"/Detox/docs/next/api/device"},"device API"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await device.selectApp('driver');\nawait device.launchApp();\n// ... run tests ...\nawait device.selectApp('passenger');\nawait device.launchApp();\n// ... run tests ...\n")),(0,r.kt)("p",null,"Similar to device configs, any app config can be inlined as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "configurations": {\n    "ios.sim.debug": {\n      "device": "simulator",\n      "app": {\n        "type": "ios.app",\n        "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/example.app",\n        "build": "xcodebuild -project ios/example.xcodeproj -scheme example -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build"\n      }\n    }\n  }\n}\n')))}d.isMDXComponent=!0}}]);