"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2888],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),g=i,m=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return n?a.createElement(m,r(r({ref:t},p),{},{components:n})):a.createElement(m,r({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const o={},r="Overview",l={unversionedId:"config/overview",id:"config/overview",title:"Overview",description:"Config resolution",source:"@site/../docs/config/overview.md",sourceDirName:"config",slug:"/config/overview",permalink:"/Detox/docs/next/config/overview",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Debugging",permalink:"/Detox/docs/next/introduction/debugging"},next:{title:"Devices",permalink:"/Detox/docs/next/config/devices"}},s={},d=[{value:"Config resolution",id:"config-resolution",level:2},{value:"Extending configs",id:"extending-configs",level:2},{value:"Individual configurations",id:"individual-configurations",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("h2",{id:"config-resolution"},"Config resolution"),(0,i.kt)("p",null,"In order for Detox to know what device & app to use (and a lot more, actually), it needs some configuration to be statically available in a configuration file.\nIt supports both standalone configuration files, and a configuration bundling inside the project\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,i.kt)("p",null,"In essence, Detox scans for the configuration to use, through multiple files.\nIt starts from the current working directory, and runs over the following options, in this order:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".detoxrc.js")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".detoxrc.json")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".detoxrc")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"detox.config.js")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"detox.config.json")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"package.json"))),(0,i.kt)("p",null,"So, you can have a Detox config in a standalone JS or JSON file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"/* @type {Detox.DetoxConfig} */\nmodule.exports = {\n  devices: { /* ... */ },\n  apps: { /* ... */ },\n  configurations: { /* ... */ },\n};\n")),(0,i.kt)("p",null,"or as a named section inside your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "your-project",\n  "version": "X.Y.Z",\n  "scripts": {},\n// highlight-start\n  "detox": {\n    "devices": {},\n    "apps": {},\n    "configurations": {},\n  }\n// highlight-end\n}\n')),(0,i.kt)("p",null,"If you prefer to read TypeScript files instead of docs, you can open now\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox/blob/master/detox/index.d.ts"},"the typings file")," provided by Detox."),(0,i.kt)("h2",{id:"extending-configs"},"Extending configs"),(0,i.kt)("p",null,"Detox config files can be extensible and be extended if you ever need to share certain settings across multiple mobile projects, e.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n// highlight-next-line\n  "extends": "@my-org/detox-preset",\n  "apps": {\n    // \u2026\n  },\n}\n')),(0,i.kt)("p",null,"Please note that ",(0,i.kt)("inlineCode",{parentName:"p"},"extends")," has to be a valid Node module path. Relative module paths will be resolved relatively\nto the Detox config file which contains that specific ",(0,i.kt)("inlineCode",{parentName:"p"},"extends")," property, e.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'// given: ~/Projects/my-project/.detoxrc.json\n{ extends: "./e2e/detox-base-config" }\n// goes to: ~/Projects/my-project/e2e/detox-base-config.js\n{ extends: "./configs/base" }\n// then goes to: ~/Projects/my-project/e2e/configs/base/index.js\n// and so on...\n')),(0,i.kt)("h2",{id:"individual-configurations"},"Individual configurations"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"configurations")," holds all the device/app-oriented configurations. To select a specific configuration when running Detox in command-line (i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"detox build"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"detox test"),"), use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--configuration")," argument.\nNote: If there is only one configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"configurations"),", Detox will default to it."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Configuration Params"),(0,i.kt)("th",{parentName:"tr",align:null},"Details"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"device")),(0,i.kt)("td",{parentName:"tr",align:null},"Device config (object) or an alias pointing to an already defined device in ",(0,i.kt)("inlineCode",{parentName:"td"},'"devices"')," dictionary (see below).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"app")),(0,i.kt)("td",{parentName:"tr",align:null},"App config (object) or an alias pointing to an already defined application in ",(0,i.kt)("inlineCode",{parentName:"td"},'"apps"')," dictionary (see below).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps")),(0,i.kt)("td",{parentName:"tr",align:null},"Same as the ",(0,i.kt)("inlineCode",{parentName:"td"},"app"),", but that is an array form used for multi-app testing. Mutually exclusive with the ",(0,i.kt)("inlineCode",{parentName:"td"},"app")," property.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"artifacts")),(0,i.kt)("td",{parentName:"tr",align:null},"Overrides to the artifacts config. See ",(0,i.kt)("a",{parentName:"td",href:"/Detox/docs/next/config/artifacts"},"Artifacts config"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"behavior")),(0,i.kt)("td",{parentName:"tr",align:null},"Overrides to the behavior config. See ",(0,i.kt)("a",{parentName:"td",href:"/Detox/docs/next/config/behavior"},"Behavior config"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"session")),(0,i.kt)("td",{parentName:"tr",align:null},"Overrides to the session config. See ",(0,i.kt)("a",{parentName:"td",href:"/Detox/docs/next/config/session"},"Session config"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"runnerConfig")),(0,i.kt)("td",{parentName:"tr",align:null},"Path to the test runner config. Default value: ",(0,i.kt)("inlineCode",{parentName:"td"},"e2e/config.json"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"specs")),(0,i.kt)("td",{parentName:"tr",align:null},"A default glob pattern for a test runner to use when no test files are specified, e.g.: ",(0,i.kt)("inlineCode",{parentName:"td"},"e2e/**/*.test.js"))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n  // ...\n  "detox": {\n    // ...\n    "devices": {\n      // ... see in the next sections ...\n    },\n    "apps": {\n      // ... see in the next sections ...\n    },\n    "session": {\n      // ... see in the next sections ...\n    },\n    "configurations": {\n      "ios.sim.debug": {\n        "device": "simulator",\n        "app": "ios.debug"\n      },\n      "android.emu.release": {\n        "device": "emulator",\n        "app": "android.release"\n      },\n      "android.att.release": {\n        "device": "android.attached",\n        "app": "android.release"\n      },\n      "android.genymotion.release": {\n        "device": "android.genycloud",\n        "app": "android.release"\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"If you have multiple configurations, you\u2019ll have to append ",(0,i.kt)("inlineCode",{parentName:"p"},"-c <configurationName>")," to every invocation of\n",(0,i.kt)("inlineCode",{parentName:"p"},"detox build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"detox test")," CLI, e.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"detox build -c ios.sim.debug\ndetox test -c ios.sim.debug\n")),(0,i.kt)("p",null,"If this is inconvenient, and you can have some configuration as a default choice, there\u2019s a property for that:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'+"selectedConfiguration": "ios.sim.debug",\n "configurations": {\n   "ios.sim.debug": {\n     "device": "simulator",\n     "app": "ios.debug"\n   },\n')),(0,i.kt)("p",null,"Obviously, if you have only one configuration, there\u2019s no need to specify its name, just use ",(0,i.kt)("inlineCode",{parentName:"p"},"detox build")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"detox test")," as-is."))}c.isMDXComponent=!0}}]);