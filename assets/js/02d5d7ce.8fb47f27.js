"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9760],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,g=p["".concat(l,".").concat(m)]||p[m]||c[m]||r;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9774:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={},i="Using Genymotion Cloud",s={unversionedId:"guide/genymotion-cloud",id:"guide/genymotion-cloud",title:"Using Genymotion Cloud",description:"As the number of your end-to-end tests grows, the overall test session duration might easily surpass an hour or two.",source:"@site/../docs/guide/genymotion-cloud.mdx",sourceDirName:"guide",slug:"/guide/genymotion-cloud",permalink:"/Detox/docs/next/guide/genymotion-cloud",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/guide/genymotion-cloud.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Parallel Test Execution",permalink:"/Detox/docs/next/guide/parallel-test-execution"},next:{title:"Taking Screenshots",permalink:"/Detox/docs/next/guide/taking-screenshots"}},l={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuring",id:"configuring",level:2},{value:"Running",id:"running",level:2},{value:"Caveats",id:"caveats",level:2},{value:"Termination",id:"termination",level:3},{value:"Ignored behavior",id:"ignored-behavior",level:3}],d={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-genymotion-cloud"},"Using Genymotion Cloud"),(0,o.kt)("p",null,"As the number of your end-to-end tests grows, the overall test session duration might easily surpass an hour or two.\nA good idea first would be to parallelize the test execution using your test runner (e.g. for Jest that\nwould be forwarding ",(0,o.kt)("inlineCode",{parentName:"p"},"--maxWorkers <N>"),"), but this approach has its limitations. Indeed, an average build agent would handle\nrunning a few virtual devices at once, but running a dozen devices at once would make it slow and unreliable."),(0,o.kt)("p",null,"In other words, if you're experiencing scaling issues or struggling with managing local Android emulators,\na good idea would be to migrate to SaaS platforms, where you can start and stop devices on demand at any scale.\nAt the moment, Detox can offer you a first-class integration with\n",(0,o.kt)("a",{parentName:"p",href:"https://cloud.geny.io/"},"Genymotion SaaS"),", the platform that offers cloud-based Android Virtual Devices."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"You need to register an account in ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.geny.io/"},"Genymotion SaaS"),", so that you have valid credentials to use with their CLI tool,\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.genymotion.com/gmsaas"},(0,o.kt)("inlineCode",{parentName:"a"},"gmsaas")),". If you have already an account there, make sure there are available device minutes. This is less of a concern\nfor the new accounts, as they get charged with 60 minutes for free."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(1299).Z,width:"966",height:"864"})),(0,o.kt)("p",null,"Next, you should get ",(0,o.kt)("inlineCode",{parentName:"p"},"gmsaas")," CLI tool ",(0,o.kt)("a",{parentName:"p",href:"https://docs.genymotion.com/gmsaas/01_Get_Started"},"installed and configured"),",\nso that you're able to see your e-mail after running this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmsaas auth whoami\n# your_email@example.com\n")),(0,o.kt)("p",null,"If you encounter errors instead, please revisit the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.genymotion.com/gmsaas/01_Get_Started"},"Genymotion SaaS tutorial")," and check out their ",(0,o.kt)("a",{parentName:"p",href:"https://docs.genymotion.com/gmsaas/04_Issues/"},"Known Issues"),"\nsection if your problem persists."),(0,o.kt)("h2",{id:"configuring"},"Configuring"),(0,o.kt)("p",null,"To run tests on a device, you need to define its properties first: OS version, screen dimensions, etc.\nThis entire set of device specs is called a ",(0,o.kt)("strong",{parentName:"p"},"recipe"),". ",(0,o.kt)("em",{parentName:"p"},"Genymotion SaaS")," offers you a predefined list of recipes\nto pick from, but you can create custom recipes as well. Refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.genymotion.com/saas/04_Basic_Steps/"},"Basic Steps")," tutorial on their website for\nmore details."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9375).Z,width:"1025",height:"762"})),(0,o.kt)("p",null,"Each recipe item in the list can be expanded for extra details, and that's where you can find its respective ",(0,o.kt)("em",{parentName:"p"},"UUID"),".\nCopy that UUID and use it to create a new device and a new configuration in your Detox config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title=".detoxrc.js"',title:'".detoxrc.js"'}," module.exports = {\n   devices: {\n     simulator: { /* ... */ },\n     emulator: { /* ... */ },\n+    genycloud: {\n+      type: 'android.genycloud',\n+      device: {\n+        recipeUUID: '<paste your chosen recipe UUID>'\n+      },\n+    },\n   },\n   apps: {\n     'ios.debug': { /* ... */ },\n     'ios.release': { /* ... */ },\n     'android.debug': { /* ... */ },\n     'android.release': { /* ... */ },\n   },\n   configurations: {\n     'ios.debug': { /* ... */ },\n     'ios.release': { /* ... */ },\n     'android.debug': { /* ... */ },\n     'android.release': { /* ... */ },\n+    'android.genycloud.release': {\n+      device: 'genycloud',\n+      app: 'android.release',\n+    },\n   },\n };\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"In the example above we assume you'll be running a ",(0,o.kt)("em",{parentName:"p"},"release configuration")," of your app since this is what\nusually happens on CI. Running ",(0,o.kt)("em",{parentName:"p"},"debug builds")," is likely to require more preparations like\nreversing ",(0,o.kt)("inlineCode",{parentName:"p"},"8081")," port (used by React Native packager by default) before you launch your app, e.g.:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"await device.reverseTcpPort(8081);\nawait device.launchApp();\n")),(0,o.kt)("p",{parentName:"admonition"},"If you use extra ports, make sure to have them reversed as well. That might also apply to ",(0,o.kt)("em",{parentName:"p"},"release configurations"),",\nprovided you rely on custom communication with ",(0,o.kt)("em",{parentName:"p"},"localhost")," (e.g. for mock servers).")),(0,o.kt)("p",null,"Although the ",(0,o.kt)("em",{parentName:"p"},"recipe UUIDs")," are guaranteed to be unique and never change unlike the ",(0,o.kt)("em",{parentName:"p"},"recipe names"),", you still can use\nthe latter if you like \u2013 just switch from ",(0,o.kt)("inlineCode",{parentName:"p"},"recipeUUID")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"recipeName")," property like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"     genycloud: {\n       type: 'android.genycloud',\n       device: {\n-        recipeUUID: '<delete your recipeUUID property>'\n+        recipeName: '<paste the recipe name>'\n       },\n     },\n   },\n")),(0,o.kt)("h2",{id:"running"},"Running"),(0,o.kt)("p",null,"Assuming you have created a new ",(0,o.kt)("inlineCode",{parentName:"p"},"android.genycloud.release")," configuration, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"detox test -c android.genycloud.release\n")),(0,o.kt)("p",null,"Soon enough you'll be seeing an output like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Allocating Genymotion-Cloud instance Detox.62dfc57b-3201-c861-29bb-8f31f60a8d39.w1 for testing.\nTo access it via a browser, go to: https://cloud.geny.io/instance/8fc62d21-3de0-4ed8-bf18-e69b90246dc5\n")),(0,o.kt)("p",null,"Use the link to see what's happening on your device in real time:"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(2405).Z,width:"1034",height:"975"})),(0,o.kt)("p",null,"After you make sure the tests run as intended, try running multiple workers to pick the optimal\ncount of workers for your project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'detox test -c android.genycloud.release --maxWorkers 8\n# DETOX_CONFIGURATION="android.genycloud.release" jest --config e2e/jest.config.js --maxWorkers 8\n# \u2026\n')),(0,o.kt)("h2",{id:"caveats"},"Caveats"),(0,o.kt)("h3",{id:"termination"},"Termination"),(0,o.kt)("p",null,"If you have to terminate your tests execution via ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+C")," or another forcible way, pay attention to\nthe warnings printed, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plain",metastring:"text",text:!0},"detox[22314] i WARNING! Detected a Genymotion cloud instance leakage, for the following instances:\ndetox[22314] i Instance Detox.1e0ee8a4-6949-90c7-6680-5c3a9010d1e5.w1 (8fc62d21-3de0-4ed8-bf18-e69b90246dc5)\n    Kill it by visiting https://cloud.geny.io/instance/8fc62d21-3de0-4ed8-bf18-e69b90246dc5, or by running:\n    gmsaas instances stop 8fc62d21-3de0-4ed8-bf18-e69b90246dc5\n")),(0,o.kt)("p",null,"Leaving the device unattended would mean spending extra money \ud83d\ude2c \ud83d\udcb5, so make sure to follow the\ninstructions and stop your instances, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gmsaas instances stop 8fc62d21-3de0-4ed8-bf18-e69b90246dc5\n")),(0,o.kt)("p",null,"We plan to improve this behavior and secure emergency teardown someday, but beforehand the next issue\nshould be resolved (see it below). Besides, ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+C"),"'ing proves to be useful when you want to leave the device active\nat some point of your test scenario and interact with it manually."),(0,o.kt)("h3",{id:"ignored-behavior"},"Ignored behavior"),(0,o.kt)("p",null,"Detox CLI has ",(0,o.kt)("a",{parentName:"p",href:"/Detox/docs/next/api/detox-cli#test"},(0,o.kt)("inlineCode",{parentName:"a"},"-u, --cleanup")," option"),", and the behavior config has the respective ",(0,o.kt)("a",{parentName:"p",href:"/Detox/docs/next/config/behavior"},(0,o.kt)("inlineCode",{parentName:"a"},"shutdownDevice"),"\nproperty"),", but ",(0,o.kt)("strong",{parentName:"p"},"none of them has effect")," on ",(0,o.kt)("em",{parentName:"p"},"Genymotion SaaS")," devices. Detox always shuts them down in the end\nof the test session (unless you terminate it abruptly \u2013 see the previous caveat)."),(0,o.kt)("p",null,"This is a ",(0,o.kt)("strong",{parentName:"p"},"known issue")," which stems from the older one. Originally these flags meant ",(0,o.kt)("em",{parentName:"p"},'"shutting down the devices\nafter all the tests have been executed"'),", but historically it had always been working\nas a ",(0,o.kt)("em",{parentName:"p"},'"shut them down after each test file"')," instead."),(0,o.kt)("p",null,"Taking into account that starting a device in Genymotion SaaS is apt to take about a minute, we chose to hard-code\nthe more cost-effective strategy as a lesser evil. This is why we'll be always stopping your\ninstances in the end until there's a proper fix to ",(0,o.kt)("inlineCode",{parentName:"p"},"shutdownDevice")," behavior."))}c.isMDXComponent=!0},2405:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/live-e732e39661a935cd3829e0e2e4bd55e5.png"},9375:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/recipe-054d0e32b829a3aaaa8deac37e1fee37.png"},1299:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/register-3d3806a023e9b96a628b00837cfe1ba5.png"}}]);