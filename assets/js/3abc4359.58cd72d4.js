"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4537],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),l=n(7294),r=n(6010),i=n(2389),o=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n;const{lazy:i,block:d,defaultValue:m,values:f,groupId:k,className:h}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,o.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(t=null!=m?m:null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)?t:v[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:x,setTabGroupChoices:N}=(0,s.U)(),[w,D]=(0,l.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=k){const e=x[k];null!=e&&e!==w&&g.some((t=>t.value===e))&&D(e)}const C=e=>{const t=e.currentTarget,n=O.indexOf(t),a=g[n].value;a!==w&&(T(t),D(a),null!=k&&N(k,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=O.indexOf(e.currentTarget)+1;n=null!=(a=O[t])?a:O[0];break}case"ArrowLeft":{var l;const t=O.indexOf(e.currentTarget)-1;n=null!=(l=O[t])?l:O[O.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},h)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:E,onFocus:C,onClick:C},i,{className:(0,r.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),i?(0,l.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,i.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}},92:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=n(7462),l=(n(7294),n(3905)),r=n(5488),i=n(5162);const o={id:"uninstalling",slug:"guide/uninstalling",title:"Uninstalling Detox",sidebar_label:"Uninstalling Detox"},s=void 0,u={unversionedId:"uninstalling",id:"version-19.x/uninstalling",title:"Uninstalling Detox",description:"Uninstalling Detox",source:"@site/versioned_docs/version-19.x/Guide.Uninstalling.md",sourceDirName:".",slug:"/guide/uninstalling",permalink:"/Detox/docs/guide/uninstalling",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-19.x/Guide.Uninstalling.md",tags:[],version:"19.x",frontMatter:{id:"uninstalling",slug:"guide/uninstalling",title:"Uninstalling Detox",sidebar_label:"Uninstalling Detox"},sidebar:"tutorialSidebar",previous:{title:"Expo",permalink:"/Detox/docs/guide/expo"},next:{title:"Contributing",permalink:"/Detox/docs/contributing"}},c={},p=[{value:"Uninstalling Detox",id:"uninstalling-detox",level:2},{value:"Detox Framework Cache",id:"detox-framework-cache",level:3},{value:"Test Session State",id:"test-session-state",level:3},{value:"Cloned Simulators (macOS)",id:"cloned-simulators-macos",level:3},{value:"Remnants of Artifacts",id:"remnants-of-artifacts",level:3},{value:"iOS",id:"ios",level:4},{value:"Android",id:"android",level:4},{value:"Detox CLI",id:"detox-cli",level:3}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"uninstalling-detox"},"Uninstalling Detox"),(0,l.kt)("p",null,"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc."),(0,l.kt)("p",null,"This checklist might come in handy whenever you have to make a clean uninstallation after using Detox."),(0,l.kt)("h3",{id:"detox-framework-cache"},"Detox Framework Cache"),(0,l.kt)("p",null,"Every install of Detox also triggers a ",(0,l.kt)("inlineCode",{parentName:"p"},"postinstall")," script in its ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),", which builds (or unpacks) ",(0,l.kt)("inlineCode",{parentName:"p"},"Detox.framework")," into ",(0,l.kt)("inlineCode",{parentName:"p"},"~/Library/Detox"),"."),(0,l.kt)("p",null,"You can either delete the folder manually:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf ~/Library/Detox\n")),(0,l.kt)("p",null,"or run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"detox clean-framework-cache\n")),(0,l.kt)("h3",{id:"test-session-state"},"Test Session State"),(0,l.kt)("p",null,"On every test run, Detox rewrites a few temporary files in ",(0,l.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH"),", i.e.:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The respective iOS and Android lockfiles to tell apart the busy and the available devices for use with multiple workers:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"device.registry.state.lock")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"android-device.registry.state.lock"),"."))),(0,l.kt)("li",{parentName:"ol"},"A plain text file with the line-separated list of last failed test files to rerun via ",(0,l.kt)("inlineCode",{parentName:"li"},"-R <retries-count>")," CLI feature:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"last-failed.txt"),".")))),(0,l.kt)("p",null,"The location of ",(0,l.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH")," may vary depending on the operating system:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"macOS:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/Library/Detox"),"."))),(0,l.kt)("li",{parentName:"ul"},"Linux:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME/Detox"),", if ",(0,l.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME")," is defined;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/.local/share/Detox"),", otherwise."))),(0,l.kt)("li",{parentName:"ul"},"Windows:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%\\data\\Detox"),", if ",(0,l.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%")," is defined;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"%USERPROFILE%\\Application Data\\Detox"),", otherwise.")))),(0,l.kt)("h3",{id:"cloned-simulators-macos"},"Cloned Simulators (macOS)"),(0,l.kt)("p",null,'To support the "multiple workers" feature on iOS, Detox clones simulator instances when there aren\u2019t enough available ones.\nThe autogenerated simulators have names with ',(0,l.kt)("inlineCode",{parentName:"p"},"-Detox")," suffix appended, so you can easily spot them with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'xcrun simctl list | grep "-Detox"\n')),(0,l.kt)("p",null,"To delete a simulator, you can use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"xcrun simctl delete <uuid>\n")),(0,l.kt)("h3",{id:"remnants-of-artifacts"},"Remnants of Artifacts"),(0,l.kt)("p",null,"Forced exits may result in leaving some temporary files behind."),(0,l.kt)("h4",{id:"ios"},"iOS"),(0,l.kt)("p",null,"To ensure there are no temporary artifact files (logs, screenshots, etc.), you can run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf $TMPDIR/*.detox.*\n")),(0,l.kt)("p",null,"If you wish to clean up your iOS simulators from the installed apps and other customizations, just run the erase procedure for the relevant ones:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"xcrun simctl erase <uuid>\n")),(0,l.kt)("h4",{id:"android"},"Android"),(0,l.kt)("p",null,"The advice for iOS applies to the Android virtual devices as well. To wipe user files on a specific AVD, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"emulator -avd <your_AVD> -wipe-data\n")),(0,l.kt)("p",null,"If you have to clean temporary Detox files from an individual booted device, look out for files like ",(0,l.kt)("inlineCode",{parentName:"p"},"11159175_0.log")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"/sdcard")," folder.\nYou can try deleting them using a simple wildcard like below or use your own:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"adb -s <emulator-port> shell rm -rf /sdcard/*_*.* \n")),(0,l.kt)("h3",{id:"detox-cli"},"Detox CLI"),(0,l.kt)("p",null,"If you have installed the official CLI wrapper for Detox, then make sure to uninstall it as well:"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm uninstall -g detox-cli\n"))),(0,l.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn remove -g detox-cli\n")))))}m.isMDXComponent=!0}}]);