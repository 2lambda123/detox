"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6724],{5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),l=a(6010),o=a(2389),i=a(7392),p=a(7094),s=a(2466);const d="tabList__CuJ",u="tabItem_LNqP";function c(e){var t;const{lazy:a,block:o,defaultValue:c,values:m,groupId:h,className:g}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,i.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===c?c:c??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,p.U)(),[x,w]=(0,r.useState)(f),D=[],{blockElementScrollPositionUntilNextRender:T}=(0,s.o5)();if(null!=h){const e=y[h];null!=e&&e!==x&&b.some((t=>t.value===e))&&w(e)}const C=e=>{const t=e.currentTarget,a=D.indexOf(t),n=b[a].value;n!==x&&(T(t),w(n),null!=h&&N(h,String(n)))},A=e=>{var t;let a=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const t=D.indexOf(e.currentTarget)+1;a=D[t]??D[0];break}case"ArrowLeft":{const t=D.indexOf(e.currentTarget)-1;a=D[t]??D[D.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},g)},b.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>D.push(e),onKeyDown:A,onClick:C},o,{className:(0,l.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":x===t})}),a??t)}))),a?(0,r.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,o.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},7028:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>d,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),o=a(5162),i=a(6693);const p={},s="Apps",d={unversionedId:"config/apps",id:"config/apps",title:"Apps",description:"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:",source:"@site/../docs/config/apps.mdx",sourceDirName:"config",slug:"/config/apps",permalink:"/Detox/docs/next/config/apps",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/apps.mdx",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Devices",permalink:"/Detox/docs/next/config/devices"},next:{title:"Artifacts",permalink:"/Detox/docs/next/config/artifacts"}},u={},c=[{value:"Location",id:"location",level:2},{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Multiple apps",id:"multiple-apps",level:2}],m={toc:c};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"apps"},"Apps"),(0,r.kt)("p",null,"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:"),(0,r.kt)("h2",{id:"location"},"Location"),(0,r.kt)(i.ZP,{sectionName:"apps",propertyName:"app",mdxType:"Location"}),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(l.Z,{groupId:"mobileOS",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"ios.app",label:"ios.app",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "ios.app",\n  "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/example.app",\n  "build": "xcodebuild -project ios/example.xcodeproj -scheme example -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build"\n}\n'))),(0,r.kt)(o.Z,{value:"android.apk",label:"android.apk",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "android.apk",\n  "binaryPath": "path/to/myApp.apk",\n  "build": "cd android && ./gradlew \u2026"\n}\n')))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("p",null,"An app config can have the following params:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Configuration Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Details"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory property to discern app types: ",(0,r.kt)("inlineCode",{parentName:"td"},"ios.app"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.apk"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Use only when working with multiple apps within the same configuration. See an example below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"binaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"Relative path to the ipa/app/apk due to be tested (make sure you build the app in a project relative path)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"build")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," Build command (normally an ",(0,r.kt)("inlineCode",{parentName:"td"},"xcodebuild")," command you use to build your app), which can be called later using Detox CLI tool as a convenience.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"testBinaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"(optional, Android only): relative path to the test app (apk)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"launchArgs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," An object specifying arguments (key-values pairs) to pass through into the app, upon launching on the device. For more info, refer to the dedicated ",(0,r.kt)("a",{parentName:"td",href:"/Detox/docs/next/guide/launch-args"},"launch-arguments guide"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"reversePorts")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"(optional, Android only)")," An array of TCP ports to reverse, so that the network requests to ",(0,r.kt)("inlineCode",{parentName:"td"},"localhost:{port}")," on Android device are going to be forwarded to the host machine.")))),(0,r.kt)("h2",{id:"multiple-apps"},"Multiple apps"),(0,r.kt)("p",null,"To work with multiple apps within the same configuration you should be giving each app its name, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "apps": {\n    "driver.ios.release": {\n      "type": "ios.app",\n      "name": "driver",\n      "binaryPath": "path/to/driver.app"\n    },\n    "passenger.ios.release": {\n      "type": "ios.app",\n      "name": "passenger",\n      "binaryPath": "path/to/passenger.app"\n    }\n  },\n  "configurations": {\n    "ios.release": {\n      "device": "simulator",\n      "apps": ["driver", "passenger"]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"After that, you can change the current app in your tests via ",(0,r.kt)("a",{parentName:"p",href:"/Detox/docs/next/api/device"},"device API"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await device.selectApp('driver');\nawait device.launchApp();\n// ... run tests ...\nawait device.selectApp('passenger');\nawait device.launchApp();\n// ... run tests ...\n")))}h.isMDXComponent=!0},6693:(e,t,a)=>{a.d(t,{ZP:()=>i});var n=a(7462),r=(a(7294),a(3905)),l=a(814);const o={toc:[]};function i(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can define the ",a.propertyName," config in two ways: ",(0,r.kt)("i",null,"aliased")," and ",(0,r.kt)("i",null,"inlined")," (per a configuration):"),(0,r.kt)(l.Z,{title:".detoxrc.js",language:"javascript",mdxType:"CodeBlock"},["/** @type {Detox.DetoxConfig} */","module.exports = {",`  ${a.sectionName}: {`,"// highlight-start",`    ${a.propertyName}Key: {`,`      /* \u2026 ${a.propertyName} config \u2026 */`,"    }","// highlight-end","  },","  /* \u2026 */","  configurations: {","    'example.aliased': {","      /* \u2026 */","// highlight-next-line",`      ${a.propertyName}: '${a.propertyName}Key', // (1)`,"    },","    'example.inlined': {","      /* \u2026 */","// highlight-start",`      ${a.propertyName}: { // (2)`,`        /* \u2026 ${a.propertyName} config \u2026 */`,"      },","// highlight-end","    },","  },","};"].join("\n")))}i.isMDXComponent=!0}}]);