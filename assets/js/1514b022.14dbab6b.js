"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4625],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(f,r(r({ref:t},p),{},{components:n})):a.createElement(f,r({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2212:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=n(7462),l=n(3366),i=(n(7294),n(3905)),r=["components"],o={id:"uninstalling",slug:"guide/uninstalling",title:"Uninstalling Detox",sidebar_label:"Uninstalling Detox"},s=void 0,u={unversionedId:"uninstalling",id:"uninstalling",isDocsHomePage:!1,title:"Uninstalling Detox",description:"Uninstalling Detox",source:"@site/../docs/Guide.Uninstalling.md",sourceDirName:".",slug:"/guide/uninstalling",permalink:"/Detox/docs/guide/uninstalling",editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/Guide.Uninstalling.md",tags:[],version:"current",frontMatter:{id:"uninstalling",slug:"guide/uninstalling",title:"Uninstalling Detox",sidebar_label:"Uninstalling Detox"},sidebar:"tutorialSidebar",previous:{title:"Expo",permalink:"/Detox/docs/guide/expo"},next:{title:"Contributing",permalink:"/Detox/docs/contributing"}},p=[{value:"Uninstalling Detox",id:"uninstalling-detox",children:[{value:"Detox Framework Cache",id:"detox-framework-cache",children:[],level:3},{value:"Test Session State",id:"test-session-state",children:[],level:3},{value:"Cloned Simulators (macOS)",id:"cloned-simulators-macos",children:[],level:3},{value:"Remnants of Artifacts",id:"remnants-of-artifacts",children:[{value:"iOS",id:"ios",children:[],level:4},{value:"Android",id:"android",children:[],level:4}],level:3},{value:"Detox CLI",id:"detox-cli",children:[],level:3}],level:2}],c={toc:p};function d(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"uninstalling-detox"},"Uninstalling Detox"),(0,i.kt)("p",null,"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc."),(0,i.kt)("p",null,"This checklist might come in handy whenever you have to make a clean uninstall after using Detox."),(0,i.kt)("h3",{id:"detox-framework-cache"},"Detox Framework Cache"),(0,i.kt)("p",null,"Every ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install detox")," also has a ",(0,i.kt)("inlineCode",{parentName:"p"},"postinstall")," phase, which builds (or unpacks) ",(0,i.kt)("inlineCode",{parentName:"p"},"Detox.framework")," into ",(0,i.kt)("inlineCode",{parentName:"p"},"~/Library/Detox"),"."),(0,i.kt)("p",null,"You can either delete the folder manually:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf ~/Library/Detox\n")),(0,i.kt)("p",null,"or run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"detox clean-framework-cache\n")),(0,i.kt)("h3",{id:"test-session-state"},"Test Session State"),(0,i.kt)("p",null,"On every test run, Detox rewrites a few temporary files in ",(0,i.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH"),", i.e.:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The respective iOS and Android lockfiles to tell apart the busy and the available devices for use with multiple workers:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"device.registry.state.lock")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"android-device.registry.state.lock"),"."))),(0,i.kt)("li",{parentName:"ol"},"A plain text file with the line-separated list of last failed test files to rerun via ",(0,i.kt)("inlineCode",{parentName:"li"},"-R <retries-count>")," CLI feature:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"last-failed.txt"),".")))),(0,i.kt)("p",null,"The location of ",(0,i.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH")," may vary depending on the operating system:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"macOS:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"~/Library/Detox"),"."))),(0,i.kt)("li",{parentName:"ul"},"Linux:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME/Detox"),", if ",(0,i.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME")," is defined;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"~/.local/share/Detox"),", elsewise."))),(0,i.kt)("li",{parentName:"ul"},"Windows:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%\\data\\Detox"),", if ",(0,i.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%")," is defined;"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%USERPROFILE%\\Application Data\\Detox"),", otherwise.")))),(0,i.kt)("h3",{id:"cloned-simulators-macos"},"Cloned Simulators (macOS)"),(0,i.kt)("p",null,'To support the "multiple workers" feature on iOS, Detox clones simulator instances when there aren\'t enough available ones.\nThe autogenerated simulators have names with ',(0,i.kt)("inlineCode",{parentName:"p"},"-Detox")," suffix appended, so you can easily spot them with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'xcrun simctl list | grep "-Detox"\n')),(0,i.kt)("p",null,"To delete a simulator, you can use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"xcrun simctl delete <uuid>\n")),(0,i.kt)("h3",{id:"remnants-of-artifacts"},"Remnants of Artifacts"),(0,i.kt)("p",null,"Forced exits may result in leaving some temporary files behind."),(0,i.kt)("h4",{id:"ios"},"iOS"),(0,i.kt)("p",null,"To ensure there are no temporary artifact files (logs, screenshots, etc.), you can run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf $TMPDIR/*.detox.*\n")),(0,i.kt)("p",null,"If you wish to clean up your iOS simulators from the installed apps and other customizations, just run the erase procedure for the relevant ones:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"xcrun simctl erase <uuid>\n")),(0,i.kt)("h4",{id:"android"},"Android"),(0,i.kt)("p",null,"The advice for iOS applies to the Android virtual devices as well. To wipe user files on a specific AVD, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"emulator -avd <your_AVD> -wipe-data\n")),(0,i.kt)("p",null,"If you have to clean temporary Detox files from an individual booted device, look out for files like ",(0,i.kt)("inlineCode",{parentName:"p"},"11159175_0.log")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"/sdcard")," folder.\nYou can try deleting them using a simple wildcard like below or use your own:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"adb -s <emulator-port> shell rm -rf /sdcard/*_*.* \n")),(0,i.kt)("h3",{id:"detox-cli"},"Detox CLI"),(0,i.kt)("p",null,"If you have installed the official CLI wrapper for Detox, then make sure to uninstall it as well:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm uninstall -g detox-cli\n")))}d.isMDXComponent=!0}}]);