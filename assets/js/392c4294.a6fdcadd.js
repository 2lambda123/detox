"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1394],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return n?i.createElement(h,l(l({ref:t},p),{},{components:n})):i.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=u;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7774:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return a},metadata:function(){return d},toc:function(){return p}});var i=n(7462),o=n(3366),r=(n(7294),n(3905)),l=["components"],a={id:"building-the-app",slug:"troubleshooting/building-the-app",title:"Dealing With Problems With Building the App & Detox",sidebar_label:"Dealing With Problems With Building the App & Detox"},s=void 0,d={unversionedId:"building-the-app",id:"building-the-app",isDocsHomePage:!1,title:"Dealing With Problems With Building the App & Detox",description:"Dealing With Problems With Building the App & Detox",source:"@site/../docs/Troubleshooting.BuildingTheApp.md",sourceDirName:".",slug:"/troubleshooting/building-the-app",permalink:"/Detox/docs/next/troubleshooting/building-the-app",editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/Troubleshooting.BuildingTheApp.md",tags:[],version:"current",frontMatter:{id:"building-the-app",slug:"troubleshooting/building-the-app",title:"Dealing With Problems With Building the App & Detox",sidebar_label:"Dealing With Problems With Building the App & Detox"},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/Detox/docs/next/troubleshooting/troubleshooting"},next:{title:"Dealing With Problems With Running Tests",permalink:"/Detox/docs/next/troubleshooting/running-tests"}},p=[{value:"Dealing With Problems With Building the App &amp; Detox",id:"dealing-with-problems-with-building-the-app--detox",children:[],level:2},{value:"Android",id:"android",children:[{value:"Problem: minSdkVersion mistmatch",id:"problem-minsdkversion-mistmatch",children:[],level:3},{value:"Problem: Kotlin <code>stdlib</code> version conflicts",id:"problem-kotlin-stdlib-version-conflicts",children:[{value:"Resolving for a precompiled dependency (<code>.aar</code>)",id:"resolving-for-a-precompiled-dependency-aar",children:[],level:4},{value:"Resolving for a compiling subproject",id:"resolving-for-a-compiling-subproject",children:[],level:4}],level:3},{value:"Problem: <code>Duplicate files copied in ...</code>",id:"problem-duplicate-files-copied-in-",children:[],level:3}],level:2}],c={toc:p};function u(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"dealing-with-problems-with-building-the-app--detox"},"Dealing With Problems With Building the App & Detox"),(0,r.kt)("p",null,"This page is about issues related to building the app, typically triggered when running ",(0,r.kt)("inlineCode",{parentName:"p"},"detox build")," (and not ",(0,r.kt)("inlineCode",{parentName:"p"},"detox test"),", for example)."),(0,r.kt)("p",null,"For troubleshooting of other issue, refer to our ",(0,r.kt)("a",{parentName:"p",href:"/Detox/docs/next/troubleshooting/troubleshooting"},"troubleshooting index"),"."),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("h3",{id:"problem-minsdkversion-mistmatch"},"Problem: minSdkVersion mistmatch"),(0,r.kt)("p",null,"For Gradle errors involving ",(0,r.kt)("inlineCode",{parentName:"p"},"minSdkVersion")," mismatches resembling this one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'uses-sdk:minSdkVersion 18 cannot be smaller than version 21 declared in library [com.facebook.react:react-native:0.64.3] /Users/janedoe/.gradle/caches/transforms-3/6a9cd4eeeb285f80b9e6f413ecd78d0d/transformed/jetified-react-native-0.64.3/AndroidManifest.xml as the library might be using APIs not available in 18\n        Suggestion: use a compatible library with a minSdk of at most 18,\n                or increase this project\'s minSdk version to at least 21,\n                or use tools:overrideLibrary="com.facebook.react" to force usage (may lead to runtime failures)\n')),(0,r.kt)("p",null,"Try applying the solution suggested in ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/21032271/how-to-inject-android-configuration-to-each-subproject-with-gradle"},"this Stack-overflow")," post, namely adding this to your root-project's ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," file (replace ",(0,r.kt)("inlineCode",{parentName:"p"},"21")," those matching your app's ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"// build.gradle\n\nallprojects {\n    afterEvaluate {\n        if (it.hasProperty('android')){\n            android {\n                defaultConfig {\n                    minSdkVersion 21 // Replace '21' with whatever suites your case\n                }\n            }\n        }\n    }\n}\n")),(0,r.kt)("h3",{id:"problem-kotlin-stdlib-version-conflicts"},"Problem: Kotlin ",(0,r.kt)("inlineCode",{parentName:"h3"},"stdlib")," version conflicts"),(0,r.kt)("p",null,"The problems and resolutions here are different depending on whether you\u2019re using Detox as a precompiled dependency artifact (i.e. an ",(0,r.kt)("inlineCode",{parentName:"p"},".aar"),") - which is by far the common case, or compiling it yourself."),(0,r.kt)("h4",{id:"resolving-for-a-precompiled-dependency-aar"},"Resolving for a precompiled dependency (",(0,r.kt)("inlineCode",{parentName:"h4"},".aar"),")"),(0,r.kt)("p",null,"Of all ",(0,r.kt)("a",{parentName:"p",href:"https://kotlinlang.org/docs/reference/using-gradle.html#configuring-dependencies"},"Kotlin implementation flavors"),", Detox assumes the most recent one, namely ",(0,r.kt)("inlineCode",{parentName:"p"},"kotlin-stdlib-jdk8"),'. If your Android build fails due to conflicts with implementations coming from other dependencies or even your own app, consider adding an exclusion to either the "other" dependencies or detox itself, for example:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"dependencies {\n-    androidTestImplementation('com.wix:detox:+')\n+    androidTestImplementation('com.wix:detox:+') { \n+        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'\n+    }\n}\n")),(0,r.kt)("p",null,"Detox should work with ",(0,r.kt)("inlineCode",{parentName:"p"},"kotlin-stdlib-jdk7"),", as well."),(0,r.kt)("p",null,"A typical error output formed by ",(0,r.kt)("inlineCode",{parentName:"p"},"Gradle")," in this case is as provided, for example, in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox/issues/1380"},"#1380"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Could not determine the dependencies of task ':detox:compileDebugAidl'.\n> Could not resolve all task dependencies for configuration ':detox:debugCompileClasspath'.\n   > Could not resolve org.jetbrains.kotlin:kotlin-stdlib:1.3.0.\n     Required by:\n         project :detox\n      > Cannot find a version of 'org.jetbrains.kotlin:kotlin-stdlib' that satisfies the version constraints:\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'com.squareup.okhttp3:okhttp:4.0.0-alpha01' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.3.30'\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'com.squareup.okio:okio:2.2.2' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.2.60'\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.0' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.3.0'\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'com.facebook.react:react-native:0.59.5' --\x3e 'com.squareup.okhttp3:okhttp:4.0.0-alpha01' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.3.30'\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'com.facebook.react:react-native:0.59.5' --\x3e 'com.squareup.okio:okio:2.2.2' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.2.60'\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.0' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.3.0'\n           Constraint path 'OurApp:detox:unspecified' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib' strictly '1.3.0' because of the following reason: debugRuntimeClasspath uses version 1.3.0\n           Constraint path 'OurApp:detox:unspecified' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib' strictly '1.3.0' because of the following reason: debugRuntimeClasspath uses version 1.3.0\n\n   > Could not resolve org.jetbrains.kotlin:kotlin-stdlib-common:1.3.0.\n     Required by:\n         project :detox\n      > Cannot find a version of 'org.jetbrains.kotlin:kotlin-stdlib-common' that satisfies the version constraints:\n           Dependency path 'OurApp:detox:unspecified' --\x3e 'com.squareup.okhttp3:okhttp:4.0.0-alpha01' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib:1.3.30' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib-common:1.3.30'\n           Constraint path 'OurApp:detox:unspecified' --\x3e 'org.jetbrains.kotlin:kotlin-stdlib-common' strictly '1.3.0' because of the following reason: debugRuntimeClasspath uses version 1.3.0\n")),(0,r.kt)("p",null,"(i.e. the project indirectly depends on different versions of ",(0,r.kt)("inlineCode",{parentName:"p"},"kotlin-stdlib"),", such as ",(0,r.kt)("inlineCode",{parentName:"p"},"1.3.0"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"1.3.30"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"1.2.60"),")"),(0,r.kt)("h4",{id:"resolving-for-a-compiling-subproject"},"Resolving for a compiling subproject"),(0,r.kt)("p",null,"Detox requires the Kotlin standard-library as its own dependency. Due to the ",(0,r.kt)("a",{parentName:"p",href:"https://kotlinlang.org/docs/reference/using-gradle.html#configuring-dependencies"},"many flavors")," by which Kotlin has been released, multiple dependencies often create a conflict."),(0,r.kt)("p",null,"For that, Detox allows for the exact specification of the standard library to use using two Gradle globals: ",(0,r.kt)("inlineCode",{parentName:"p"},"detoxKotlinVersion")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"detoxKotlinStdlib"),". You can define both in your  root build-script file (i.e.",(0,r.kt)("inlineCode",{parentName:"p"},"android/build.gradle"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"buildscript {\n    // ...\n    ext.detoxKotlinVersion = '1.3.0' // Detox' default is 1.2.0\n    ext.detoxKotlinStdlib = 'kotlin-stdlib-jdk7' // Detox' default is kotlin-stdlib-jdk8\n}\n")),(0,r.kt)("h3",{id:"problem-duplicate-files-copied-in-"},"Problem: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Duplicate files copied in ...")),(0,r.kt)("p",null,"If you get an error like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Execution failed for task ':app:transformResourcesWithMergeJavaResForDebug'.\n> com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/LICENSE\n")),(0,r.kt)("p",null,"You need to add this to the ",(0,r.kt)("inlineCode",{parentName:"p"},"android")," section of your ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/build.gradle"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"packagingOptions {\n    exclude 'META-INF/LICENSE'\n}\n")))}u.isMDXComponent=!0}}]);