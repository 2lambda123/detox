"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5781],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={id:"detox-object-api",slug:"api/detox-object-api",title:"Detox Object API",sidebar_label:"The `detox` Object"},i=void 0,c={unversionedId:"detox-object-api",id:"detox-object-api",title:"Detox Object API",description:"The detox Object",source:"@site/../docs/APIRef.DetoxObjectAPI.md",sourceDirName:".",slug:"/api/detox-object-api",permalink:"/Detox/docs/next/api/detox-object-api",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/APIRef.DetoxObjectAPI.md",tags:[],version:"current",frontMatter:{id:"detox-object-api",slug:"api/detox-object-api",title:"Detox Object API",sidebar_label:"The `detox` Object"},sidebar:"tutorialSidebar",previous:{title:"Configuration Options",permalink:"/Detox/docs/next/api/configuration"},next:{title:"The `device` Object",permalink:"/Detox/docs/next/api/device-object-api"}},l={},s=[{value:"The <code>detox</code> Object",id:"the-detox-object",level:2},{value:"Methods",id:"methods",level:3},{value:"<code>detox.traceCall()</code>",id:"detoxtracecall",level:4},{value:"<code>detox.trace.startSection(), detox.trace.endSection()</code>",id:"detoxtracestartsection-detoxtraceendsection",level:4}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"the-detox-object"},"The ",(0,o.kt)("inlineCode",{parentName:"h2"},"detox")," Object"),(0,o.kt)("p",null,"TODO: rewrite this document"),(0,o.kt)("h3",{id:"methods"},"Methods"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#detoxtracecall"},(0,o.kt)("inlineCode",{parentName:"a"},"detox.traceCall()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#detoxtracestartsection-detoxtraceendsection"},(0,o.kt)("inlineCode",{parentName:"a"},"detox.trace.startSection(), detox.trace.endSection()")))),(0,o.kt)("h4",{id:"detoxtracecall"},(0,o.kt)("inlineCode",{parentName:"h4"},"detox.traceCall()")),(0,o.kt)("p",null,"\u26a0\ufe0f ",(0,o.kt)("strong",{parentName:"p"},"Beta")),(0,o.kt)("p",null,"Trace a subprocess of your test\u2019s runtime such that it would leave traces inside the ",(0,o.kt)("a",{parentName:"p",href:"/Detox/docs/next/api/artifacts#timeline-plugin"},"Timeline artifact"),", for a later inspection."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('Verify sanity things', async () => {\n  // Instead of this typical direct call:\n  // await element(by.id('sanityButton')).tap()\n  \n  // Use traceCall() as a wrapper:\n  await detox.traceCall('Navigate to sanity', () =>\n    element(by.id('sanityButton')).tap());\n});\n")),(0,o.kt)("p",null,"This would have the ",(0,o.kt)("inlineCode",{parentName:"p"},"tap")," action traced to the final artifact, so it would look something like this:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"User event",src:n(5240).Z,width:"944",height:"258"})),(0,o.kt)("p",null,"At the bottom right, you can see what portion of the test was spent in handling the whole navigation process: tap + screen push + screen rendering (i.e. action time, alongside Detox' inherent wait for the application to become idle)."),(0,o.kt)("h4",{id:"detoxtracestartsection-detoxtraceendsection"},(0,o.kt)("inlineCode",{parentName:"h4"},"detox.trace.startSection(), detox.trace.endSection()")),(0,o.kt)("p",null,"\u26a0\ufe0f ",(0,o.kt)("strong",{parentName:"p"},"Beta")),(0,o.kt)("p",null,"This is similar to the ",(0,o.kt)("inlineCode",{parentName:"p"},"traceCall()")," API, except that it gives more freedom with respect to when a section\u2019s start and ending times are defined, so as to monitor a nontrivial flow. As a usage example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('Verify sanity things', async () => {\n  try {\n    detox.trace.startSection('Turn off notifications');\n    await element(by.id('gotoNotifications')).tap();\n    await element(by.id('notificationsToggle')).tap();\n    await device.pressBack();    \n  } finally {\n    detox.trace.endSection('Turn off notifications');    \n  }\n});\n")),(0,o.kt)("p",null,"Effectively, ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"end")," can even be called in two complete different places - such as a ",(0,o.kt)("inlineCode",{parentName:"p"},"before")," and an ",(0,o.kt)("inlineCode",{parentName:"p"},"after"),". But that is discouraged. In fact, ",(0,o.kt)("strong",{parentName:"p"},"usage of ",(0,o.kt)("inlineCode",{parentName:"strong"},"detox.traceCall()")," is the recommended way of tracing things, altogether.")))}p.isMDXComponent=!0},5240:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/timeline-artifact-userEvent-a5a014880bdcf3c953fb21db902ee903.png"}}]);