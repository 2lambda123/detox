"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6724],{5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(7462),r=a(7294),l=a(6010),o=a(2466),i=a(6550),p=a(1980),s=a(7392),u=a(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function c(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=c(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[p,s]=h({queryString:a,groupId:n}),[d,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),k=(()=>{const e=p??d;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),g(e)}),[s,g,l]),tabValues:l}}var k=a(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:p,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,a=u.indexOf(t),n=s[a].value;n!==i&&(d(t),p(n))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},s.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},o,{className:(0,l.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",f.tabList)},r.createElement(b,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},7028:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>p,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(4866),o=a(5162),i=a(6693);const p={},s="Apps",u={unversionedId:"config/apps",id:"config/apps",title:"Apps",description:"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:",source:"@site/../docs/config/apps.mdx",sourceDirName:"config",slug:"/config/apps",permalink:"/Detox/docs/next/config/apps",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/../docs/config/apps.mdx",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Devices",permalink:"/Detox/docs/next/config/devices"},next:{title:"Artifacts",permalink:"/Detox/docs/next/config/artifacts"}},d={},c=[{value:"Location",id:"location",level:2},{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"Multiple apps",id:"multiple-apps",level:2}],m={toc:c},h="wrapper";function g(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"apps"},"Apps"),(0,r.kt)("p",null,"The format of Detox config allows you to define inside it multiple app configs in a key-value manner, i.e.:"),(0,r.kt)("h2",{id:"location"},"Location"),(0,r.kt)(i.ZP,{sectionName:"apps",propertyName:"app",mdxType:"Location"}),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(l.Z,{groupId:"mobileOS",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"ios.app",label:"ios.app",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "ios.app",\n  "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/example.app",\n  "build": "xcodebuild -project ios/example.xcodeproj -scheme example -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build"\n}\n'))),(0,r.kt)(o.Z,{value:"android.apk",label:"android.apk",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "android.apk",\n  "binaryPath": "path/to/myApp.apk",\n  "build": "cd android && ./gradlew \u2026"\n}\n')))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("p",null,"An app config can have the following params:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Configuration Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Details"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"Mandatory property to discern app types: ",(0,r.kt)("inlineCode",{parentName:"td"},"ios.app"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"android.apk"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Use only when working with multiple apps within the same configuration. See an example below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"binaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"Relative path to the ipa/app/apk due to be tested (make sure you build the app in a project relative path)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"build")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," Build command (normally an ",(0,r.kt)("inlineCode",{parentName:"td"},"xcodebuild")," command you use to build your app), which can be called later using Detox CLI tool as a convenience.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"testBinaryPath")),(0,r.kt)("td",{parentName:"tr",align:null},"(optional, Android only): relative path to the test app (apk)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"launchArgs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"[","optional]")," An object specifying arguments (key-values pairs) to pass through into the app, upon launching on the device. For more info, refer to the dedicated ",(0,r.kt)("a",{parentName:"td",href:"/Detox/docs/next/guide/launch-args"},"launch-arguments guide"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"reversePorts")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"(optional, Android only)")," An array of TCP ports to reverse, so that the network requests to ",(0,r.kt)("inlineCode",{parentName:"td"},"localhost:{port}")," on Android device are going to be forwarded to the host machine.")))),(0,r.kt)("h2",{id:"multiple-apps"},"Multiple apps"),(0,r.kt)("p",null,"To work with multiple apps within the same configuration you should be giving each app its name, e.g.:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "apps": {\n    "driver.ios.release": {\n      "type": "ios.app",\n      "name": "driver",\n      "binaryPath": "path/to/driver.app"\n    },\n    "passenger.ios.release": {\n      "type": "ios.app",\n      "name": "passenger",\n      "binaryPath": "path/to/passenger.app"\n    }\n  },\n  "configurations": {\n    "ios.release": {\n      "device": "simulator",\n      "apps": ["driver", "passenger"]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"After that, you can change the current app in your tests via ",(0,r.kt)("a",{parentName:"p",href:"/Detox/docs/next/api/device"},"device API"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await device.selectApp('driver');\nawait device.launchApp();\n// ... run tests ...\nawait device.selectApp('passenger');\nawait device.launchApp();\n// ... run tests ...\n")))}g.isMDXComponent=!0},6693:(e,t,a)=>{a.d(t,{ZP:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(814);const o={toc:[]},i="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(i,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can define the ",a.propertyName," config in two ways: ",(0,r.kt)("i",null,"aliased")," and ",(0,r.kt)("i",null,"inlined")," (per a configuration):"),(0,r.kt)(l.Z,{title:".detoxrc.js",language:"javascript",mdxType:"CodeBlock"},["/** @type {Detox.DetoxConfig} */","module.exports = {",`  ${a.sectionName}: {`,"// highlight-start",`    ${a.propertyName}Key: {`,`      /* \u2026 ${a.propertyName} config \u2026 */`,"    }","// highlight-end","  },","  /* \u2026 */","  configurations: {","    'example.aliased': {","      /* \u2026 */","// highlight-next-line",`      ${a.propertyName}: '${a.propertyName}Key', // (1)`,"    },","    'example.inlined': {","      /* \u2026 */","// highlight-start",`      ${a.propertyName}: { // (2)`,`        /* \u2026 ${a.propertyName} config \u2026 */`,"      },","// highlight-end","    },","  },","};"].join("\n")))}p.isMDXComponent=!0}}]);