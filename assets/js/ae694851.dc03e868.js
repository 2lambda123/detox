"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8883],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),u=a(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:i,values:d,groupId:m,className:f}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=d??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,o.l)(h,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,s.U)(),[x,N]=(0,r.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:D}=(0,u.o5)();if(null!=m){const e=b[m];null!=e&&e!==x&&h.some((t=>t.value===e))&&N(e)}const O=e=>{const t=e.currentTarget,a=w.indexOf(t),n=h[a].value;n!==x&&(D(t),N(n),null!=m&&y(m,String(n)))},T=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},f)},h.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>w.push(e),onKeyDown:T,onClick:O},i,{className:(0,l.Z)("tabs__item",p,i?.className,{"tabs__item--active":x===t})}),a??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function m(e){const t=(0,i.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},4660:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),i=a(5162);const o={},s="Uninstalling Detox",u={unversionedId:"guide/uninstalling",id:"version-20.x/guide/uninstalling",title:"Uninstalling Detox",description:"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc.",source:"@site/versioned_docs/version-20.x/guide/uninstalling.md",sourceDirName:"guide",slug:"/guide/uninstalling",permalink:"/Detox/docs/guide/uninstalling",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-20.x/guide/uninstalling.md",tags:[],version:"20.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ProGuard configuration",permalink:"/Detox/docs/guide/proguard-configuration"},next:{title:"Dealing With Problems With Building the App & Detox",permalink:"/Detox/docs/troubleshooting/building-the-app"}},c={},p=[{value:"Detox Framework Cache",id:"detox-framework-cache",level:2},{value:"Test Session State",id:"test-session-state",level:2},{value:"Cloned Simulators (macOS)",id:"cloned-simulators-macos",level:2},{value:"Remnants of Artifacts",id:"remnants-of-artifacts",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Detox CLI",id:"detox-cli",level:2}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"uninstalling-detox"},"Uninstalling Detox"),(0,r.kt)("p",null,"Installing and using Detox implies certain side effects: cloned devices, cache files, state files, temporary files, etc."),(0,r.kt)("p",null,"This checklist might come in handy whenever you have to make a clean uninstallation after using Detox."),(0,r.kt)("h2",{id:"detox-framework-cache"},"Detox Framework Cache"),(0,r.kt)("p",null,"Every install of Detox also triggers a ",(0,r.kt)("inlineCode",{parentName:"p"},"postinstall")," script in its ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),", which builds (or unpacks) ",(0,r.kt)("inlineCode",{parentName:"p"},"Detox.framework")," into ",(0,r.kt)("inlineCode",{parentName:"p"},"~/Library/Detox"),"."),(0,r.kt)("p",null,"You can either delete the folder manually:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf ~/Library/Detox\n")),(0,r.kt)("p",null,"or run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"detox clean-framework-cache\n")),(0,r.kt)("h2",{id:"test-session-state"},"Test Session State"),(0,r.kt)("p",null,"On every test run, Detox rewrites a few temporary files in ",(0,r.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH"),", i.e.:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The respective iOS and Android lockfiles to tell apart the busy and the available devices for use with multiple workers:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"device.registry.state.lock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"android-device.registry.state.lock"),".")))),(0,r.kt)("p",null,"The location of ",(0,r.kt)("inlineCode",{parentName:"p"},"DETOX_LIBRARY_ROOT_PATH")," may vary depending on the operating system:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"macOS:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"~/Library/Detox"),"."))),(0,r.kt)("li",{parentName:"ul"},"Linux:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME/Detox"),", if ",(0,r.kt)("inlineCode",{parentName:"li"},"$XDG_DATA_HOME")," is defined;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"~/.local/share/Detox"),", otherwise."))),(0,r.kt)("li",{parentName:"ul"},"Windows:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%\\data\\Detox"),", if ",(0,r.kt)("inlineCode",{parentName:"li"},"%LOCALAPPDATA%")," is defined;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%USERPROFILE%\\Application Data\\Detox"),", otherwise.")))),(0,r.kt)("h2",{id:"cloned-simulators-macos"},"Cloned Simulators (macOS)"),(0,r.kt)("p",null,'To support the "multiple workers" feature on iOS, Detox clones simulator instances when there aren\u2019t enough available ones.\nThe autogenerated simulators have names with ',(0,r.kt)("inlineCode",{parentName:"p"},"-Detox")," suffix appended, so you can easily spot them with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'xcrun simctl list | grep "-Detox"\n')),(0,r.kt)("p",null,"To delete a simulator, you can use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xcrun simctl delete <uuid>\n")),(0,r.kt)("h2",{id:"remnants-of-artifacts"},"Remnants of Artifacts"),(0,r.kt)("p",null,"Forced exits may result in leaving some temporary files behind."),(0,r.kt)("h3",{id:"ios"},"iOS"),(0,r.kt)("p",null,"To ensure there are no temporary artifact files (logs, screenshots, etc.), you can run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf $TMPDIR/*.detox.*\n")),(0,r.kt)("p",null,"If you wish to clean up your iOS simulators from the installed apps and other customizations, just run the erase procedure for the relevant ones:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"xcrun simctl erase <uuid>\n")),(0,r.kt)("h3",{id:"android"},"Android"),(0,r.kt)("p",null,"The advice for iOS applies to the Android virtual devices as well. To wipe user files on a specific AVD, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"emulator -avd <your_AVD> -wipe-data\n")),(0,r.kt)("p",null,"If you have to clean temporary Detox files from an individual booted device, look out for files like ",(0,r.kt)("inlineCode",{parentName:"p"},"11159175_0.log")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"/sdcard")," folder.\nYou can try deleting them using a simple wildcard like below or use your own:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"adb -s <emulator-port> shell rm -rf /sdcard/*_*.*\n")),(0,r.kt)("h2",{id:"detox-cli"},"Detox CLI"),(0,r.kt)("p",null,"If you have installed the official CLI wrapper for Detox, then make sure to uninstall it as well:"),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm uninstall detox-cli --global\n"))),(0,r.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn global remove detox-cli\n")))))}m.isMDXComponent=!0}}]);