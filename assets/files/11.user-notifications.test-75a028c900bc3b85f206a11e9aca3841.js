const{userNotificationPushTrigger:userNotificationPushTrigger,userNotificationCalendarTrigger:userNotificationCalendarTrigger}=require("./utils/notifications");describe(":ios: User Notifications",(()=>{it("Init from push notification",(async()=>{await device.launchApp({newInstance:!0,userNotification:userNotificationPushTrigger}),await expect(element(by.text("From push"))).toBeVisible()})),xit("Init from calendar notification",(async()=>{await device.launchApp({newInstance:!0,userNotification:userNotificationCalendarTrigger}),await expect(element(by.text("From calendar"))).toBeVisible()})),it("Background push notification",(async()=>{await device.launchApp({newInstance:!0}),await device.sendToHome(),await device.launchApp({newInstance:!1,userNotification:userNotificationPushTrigger}),await expect(element(by.text("From push"))).toBeVisible()})),xit("Background calendar notification",(async()=>{await device.launchApp({newInstance:!0}),await device.sendToHome(),await device.launchApp({newInstance:!1,userNotification:userNotificationCalendarTrigger}),await expect(element(by.text("From calendar"))).toBeVisible()})),it("Foreground push notifications",(async()=>{await device.launchApp({newInstance:!0}),await device.sendUserNotification(userNotificationPushTrigger),await expect(element(by.text("From push"))).toBeVisible()})),xit("Foreground calendar notifications",(async()=>{await device.launchApp({newInstance:!0}),await device.sendUserNotification(userNotificationCalendarTrigger),await expect(element(by.text("From calendar"))).toBeVisible()}))})),describe(":android: User Notifications",(()=>{const a=284440699462,i={payload:{from:a,userData:"userDataValue",userDataArray:["rock","paper","scissors"],sub:{objects:"are supported as well"},"google.sent_time":1592133826891,"google.ttl":2419200,"google.original_priority":"high",collapse_key:"com.wix.detox.test"}};async function e(a,i){await expect(element(by.id(`notificationData-${a}.name`))).toBeVisible(),await expect(element(by.id(`notificationData-${a}.value`))).toHaveText(i)}async function t(){await e("userData",i.payload.userData)}it("should launch app with data",(async()=>{await device.launchApp({newInstance:!0,userNotification:i}),await element(by.text("Launch-Notification")).tap(),await async function(){await e("from",a.toString()),await e("userData",i.payload.userData),await e("userDataArray",JSON.stringify(i.payload.userDataArray)),await e("sub",JSON.stringify(i.payload.sub))}()})),it("should resume app with data",(async()=>{await device.launchApp({newInstance:!0}),console.log("Sending app to background..."),await device.sendToHome(),console.log("Resuming app with user notification"),await device.launchApp({newInstance:!1,userNotification:i}),await element(by.text("Launch-Notification")).tap(),await t()})),it("should apply notification using sendUserNotification() when app is running",(async()=>{await device.launchApp({newInstance:!0}),await device.sendUserNotification(i),await element(by.text("Launch-Notification")).tap(),await t()}))}));